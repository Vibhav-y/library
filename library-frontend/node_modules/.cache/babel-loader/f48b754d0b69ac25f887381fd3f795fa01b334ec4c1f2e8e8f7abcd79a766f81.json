{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vibhav\\\\Desktop\\\\library\\\\library-frontend\\\\src\\\\contexts\\\\AccessibilityContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibilityContext = /*#__PURE__*/createContext();\nexport const useAccessibility = () => {\n  _s();\n  const context = useContext(AccessibilityContext);\n  if (!context) {\n    throw new Error('useAccessibility must be used within an AccessibilityProvider');\n  }\n  return context;\n};\n_s(useAccessibility, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AccessibilityProvider = ({\n  children\n}) => {\n  _s2();\n  // Default accessibility settings\n  const [settings, setSettings] = useState({\n    fontSize: 100,\n    // Base font size percentage (50% to 200%)\n    zoom: 100,\n    // Page zoom percentage (75% to 150%)\n    lineHeight: 150,\n    // Line height percentage (100% to 250%)\n    letterSpacing: 0,\n    // Letter spacing in pixels (-2 to 5)\n    wordSpacing: 0,\n    // Word spacing in pixels (-2 to 10)\n    highContrast: false,\n    // High contrast mode\n    darkMode: false,\n    // Dark mode (different from theme dark mode)\n    dyslexiaFont: false,\n    // Dyslexia-friendly font\n    reduceMotion: false,\n    // Reduce animations\n    focusOutline: false,\n    // Enhanced focus outlines\n    readingMode: false,\n    // Reading mode (simplified layout)\n    colorBlindMode: 'none' // Color blind assistance: 'none', 'protanopia', 'deuteranopia', 'tritanopia'\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load settings from localStorage on mount\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  // Apply settings whenever they change\n  useEffect(() => {\n    if (!isLoading) {\n      applySettings(settings);\n      saveSettings(settings);\n    }\n  }, [settings, isLoading]);\n  const loadSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem('accessibilitySettings');\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        setSettings(prev => ({\n          ...prev,\n          ...parsed\n        }));\n      }\n    } catch (error) {\n      console.error('Error loading accessibility settings:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const saveSettings = newSettings => {\n    try {\n      localStorage.setItem('accessibilitySettings', JSON.stringify(newSettings));\n    } catch (error) {\n      console.error('Error saving accessibility settings:', error);\n    }\n  };\n  const applySettings = newSettings => {\n    const root = document.documentElement;\n    const body = document.body;\n\n    // Apply font size\n    root.style.setProperty('--accessibility-font-size', `${newSettings.fontSize}%`);\n\n    // Apply zoom\n    root.style.setProperty('--accessibility-zoom', `${newSettings.zoom}%`);\n    body.style.zoom = `${newSettings.zoom}%`;\n\n    // Apply line height\n    root.style.setProperty('--accessibility-line-height', `${newSettings.lineHeight}%`);\n\n    // Apply letter spacing\n    root.style.setProperty('--accessibility-letter-spacing', `${newSettings.letterSpacing}px`);\n\n    // Apply word spacing\n    root.style.setProperty('--accessibility-word-spacing', `${newSettings.wordSpacing}px`);\n\n    // Apply accessibility classes\n    body.classList.toggle('accessibility-high-contrast', newSettings.highContrast);\n    body.classList.toggle('accessibility-dark-mode', newSettings.darkMode);\n    body.classList.toggle('accessibility-dyslexia-font', newSettings.dyslexiaFont);\n    body.classList.toggle('accessibility-reduce-motion', newSettings.reduceMotion);\n    body.classList.toggle('accessibility-focus-outline', newSettings.focusOutline);\n    body.classList.toggle('accessibility-reading-mode', newSettings.readingMode);\n\n    // Color blind modes\n    body.classList.remove('accessibility-protanopia', 'accessibility-deuteranopia', 'accessibility-tritanopia');\n    if (newSettings.colorBlindMode !== 'none') {\n      body.classList.add(`accessibility-${newSettings.colorBlindMode}`);\n    }\n\n    // Set CSS custom properties for relative sizing\n    root.style.setProperty('--base-font-size', `${16 * (newSettings.fontSize / 100)}px`);\n    root.style.setProperty('--base-line-height', `${newSettings.lineHeight / 100}`);\n  };\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const resetSettings = () => {\n    const defaultSettings = {\n      fontSize: 100,\n      zoom: 100,\n      lineHeight: 150,\n      letterSpacing: 0,\n      wordSpacing: 0,\n      highContrast: false,\n      darkMode: false,\n      dyslexiaFont: false,\n      reduceMotion: false,\n      focusOutline: false,\n      readingMode: false,\n      colorBlindMode: 'none'\n    };\n    setSettings(defaultSettings);\n  };\n  const getReadingModeStyles = () => {\n    if (!settings.readingMode) return {};\n    return {\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '2rem',\n      backgroundColor: settings.darkMode ? '#1a1a1a' : '#ffffff',\n      color: settings.darkMode ? '#ffffff' : '#000000',\n      lineHeight: '1.8',\n      fontSize: '1.1em'\n    };\n  };\n  const value = {\n    settings,\n    updateSetting,\n    resetSettings,\n    getReadingModeStyles,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccessibilityProvider, \"re9Tpd2UP9N7K7eu09csy5JbV2g=\");\n_c = AccessibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"AccessibilityProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AccessibilityContext","useAccessibility","_s","context","Error","AccessibilityProvider","children","_s2","settings","setSettings","fontSize","zoom","lineHeight","letterSpacing","wordSpacing","highContrast","darkMode","dyslexiaFont","reduceMotion","focusOutline","readingMode","colorBlindMode","isLoading","setIsLoading","loadSettings","applySettings","saveSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","prev","error","console","newSettings","setItem","stringify","root","document","documentElement","body","style","setProperty","classList","toggle","remove","add","updateSetting","key","value","resetSettings","defaultSettings","getReadingModeStyles","maxWidth","margin","padding","backgroundColor","color","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vibhav/Desktop/library/library-frontend/src/contexts/AccessibilityContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AccessibilityContext = createContext();\r\n\r\nexport const useAccessibility = () => {\r\n  const context = useContext(AccessibilityContext);\r\n  if (!context) {\r\n    throw new Error('useAccessibility must be used within an AccessibilityProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AccessibilityProvider = ({ children }) => {\r\n  // Default accessibility settings\r\n  const [settings, setSettings] = useState({\r\n    fontSize: 100,        // Base font size percentage (50% to 200%)\r\n    zoom: 100,           // Page zoom percentage (75% to 150%)\r\n    lineHeight: 150,     // Line height percentage (100% to 250%)\r\n    letterSpacing: 0,    // Letter spacing in pixels (-2 to 5)\r\n    wordSpacing: 0,      // Word spacing in pixels (-2 to 10)\r\n    highContrast: false, // High contrast mode\r\n    darkMode: false,     // Dark mode (different from theme dark mode)\r\n    dyslexiaFont: false, // Dyslexia-friendly font\r\n    reduceMotion: false, // Reduce animations\r\n    focusOutline: false, // Enhanced focus outlines\r\n    readingMode: false,  // Reading mode (simplified layout)\r\n    colorBlindMode: 'none' // Color blind assistance: 'none', 'protanopia', 'deuteranopia', 'tritanopia'\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Load settings from localStorage on mount\r\n  useEffect(() => {\r\n    loadSettings();\r\n  }, []);\r\n\r\n  // Apply settings whenever they change\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      applySettings(settings);\r\n      saveSettings(settings);\r\n    }\r\n  }, [settings, isLoading]);\r\n\r\n  const loadSettings = () => {\r\n    try {\r\n      const savedSettings = localStorage.getItem('accessibilitySettings');\r\n      if (savedSettings) {\r\n        const parsed = JSON.parse(savedSettings);\r\n        setSettings(prev => ({ ...prev, ...parsed }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading accessibility settings:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveSettings = (newSettings) => {\r\n    try {\r\n      localStorage.setItem('accessibilitySettings', JSON.stringify(newSettings));\r\n    } catch (error) {\r\n      console.error('Error saving accessibility settings:', error);\r\n    }\r\n  };\r\n\r\n  const applySettings = (newSettings) => {\r\n    const root = document.documentElement;\r\n    const body = document.body;\r\n\r\n    // Apply font size\r\n    root.style.setProperty('--accessibility-font-size', `${newSettings.fontSize}%`);\r\n    \r\n    // Apply zoom\r\n    root.style.setProperty('--accessibility-zoom', `${newSettings.zoom}%`);\r\n    body.style.zoom = `${newSettings.zoom}%`;\r\n    \r\n    // Apply line height\r\n    root.style.setProperty('--accessibility-line-height', `${newSettings.lineHeight}%`);\r\n    \r\n    // Apply letter spacing\r\n    root.style.setProperty('--accessibility-letter-spacing', `${newSettings.letterSpacing}px`);\r\n    \r\n    // Apply word spacing\r\n    root.style.setProperty('--accessibility-word-spacing', `${newSettings.wordSpacing}px`);\r\n\r\n    // Apply accessibility classes\r\n    body.classList.toggle('accessibility-high-contrast', newSettings.highContrast);\r\n    body.classList.toggle('accessibility-dark-mode', newSettings.darkMode);\r\n    body.classList.toggle('accessibility-dyslexia-font', newSettings.dyslexiaFont);\r\n    body.classList.toggle('accessibility-reduce-motion', newSettings.reduceMotion);\r\n    body.classList.toggle('accessibility-focus-outline', newSettings.focusOutline);\r\n    body.classList.toggle('accessibility-reading-mode', newSettings.readingMode);\r\n    \r\n    // Color blind modes\r\n    body.classList.remove('accessibility-protanopia', 'accessibility-deuteranopia', 'accessibility-tritanopia');\r\n    if (newSettings.colorBlindMode !== 'none') {\r\n      body.classList.add(`accessibility-${newSettings.colorBlindMode}`);\r\n    }\r\n\r\n    // Set CSS custom properties for relative sizing\r\n    root.style.setProperty('--base-font-size', `${16 * (newSettings.fontSize / 100)}px`);\r\n    root.style.setProperty('--base-line-height', `${newSettings.lineHeight / 100}`);\r\n  };\r\n\r\n  const updateSetting = (key, value) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const resetSettings = () => {\r\n    const defaultSettings = {\r\n      fontSize: 100,\r\n      zoom: 100,\r\n      lineHeight: 150,\r\n      letterSpacing: 0,\r\n      wordSpacing: 0,\r\n      highContrast: false,\r\n      darkMode: false,\r\n      dyslexiaFont: false,\r\n      reduceMotion: false,\r\n      focusOutline: false,\r\n      readingMode: false,\r\n      colorBlindMode: 'none'\r\n    };\r\n    setSettings(defaultSettings);\r\n  };\r\n\r\n  const getReadingModeStyles = () => {\r\n    if (!settings.readingMode) return {};\r\n    \r\n    return {\r\n      maxWidth: '800px',\r\n      margin: '0 auto',\r\n      padding: '2rem',\r\n      backgroundColor: settings.darkMode ? '#1a1a1a' : '#ffffff',\r\n      color: settings.darkMode ? '#ffffff' : '#000000',\r\n      lineHeight: '1.8',\r\n      fontSize: '1.1em'\r\n    };\r\n  };\r\n\r\n  const value = {\r\n    settings,\r\n    updateSetting,\r\n    resetSettings,\r\n    getReadingModeStyles,\r\n    isLoading\r\n  };\r\n\r\n  return (\r\n    <AccessibilityContext.Provider value={value}>\r\n      {children}\r\n    </AccessibilityContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}