{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vibhav\\\\Desktop\\\\library\\\\library-frontend\\\\src\\\\contexts\\\\CustomizationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { customizationAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizationContext = /*#__PURE__*/createContext();\nexport const useCustomization = () => {\n  _s();\n  const context = useContext(CustomizationContext);\n  if (!context) {\n    throw new Error('useCustomization must be used within a CustomizationProvider');\n  }\n  return context;\n};\n_s(useCustomization, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CustomizationProvider = ({\n  children\n}) => {\n  _s2();\n  const [customization, setCustomization] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Default theme colors (fallback)\n  const defaultTheme = {\n    colors: {\n      primary: '#3B82F6',\n      secondary: '#1E40AF',\n      accent: '#F59E0B',\n      background: '#F9FAFB',\n      surface: '#FFFFFF',\n      text: '#111827',\n      textSecondary: '#6B7280',\n      border: '#E5E7EB',\n      success: '#10B981',\n      warning: '#F59E0B',\n      error: '#EF4444',\n      info: '#3B82F6'\n    }\n  };\n  const loadCustomization = async () => {\n    try {\n      var _data$activeTheme;\n      setLoading(true);\n      console.log('🔄 Loading customization settings...');\n      const data = await customizationAPI.get();\n      console.log('📥 Received customization data:', data);\n      setCustomization(data);\n      setError(null);\n\n      // Apply theme to CSS variables\n      if ((_data$activeTheme = data.activeTheme) !== null && _data$activeTheme !== void 0 && _data$activeTheme.colors) {\n        console.log('🎨 Applying active theme:', data.activeTheme.name);\n        applyTheme(data.activeTheme.colors);\n      } else {\n        console.log('🎨 No active theme found, applying default theme');\n        applyTheme(defaultTheme.colors);\n      }\n    } catch (err) {\n      var _err$response;\n      console.error('❌ Error loading customization:', err);\n\n      // If it's a 404 error (no customization exists), that's normal for first time\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404) {\n        console.log('ℹ️ No customization found, using defaults');\n      } else {\n        setError(err.message);\n      }\n\n      // Always apply default theme and settings when API fails\n      console.log('🎨 Applying default theme due to error');\n      applyTheme(defaultTheme.colors);\n\n      // Set default customization\n      setCustomization({\n        systemName: 'Library System',\n        showLogo: false,\n        logoUrl: null,\n        activeTheme: defaultTheme\n      });\n    } finally {\n      setLoading(false);\n      console.log('✅ Customization loading completed');\n    }\n  };\n  const applyTheme = colors => {\n    console.log('🎨 Applying theme colors:', colors);\n    const root = document.documentElement;\n\n    // Apply CSS custom properties\n    Object.entries(colors).forEach(([key, value]) => {\n      const cssVarName = `--color-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;\n      root.style.setProperty(cssVarName, value);\n      console.log(`Set ${cssVarName} = ${value}`);\n    });\n\n    // Apply Tailwind-compatible classes through CSS variables\n    root.style.setProperty('--tw-color-primary', colors.primary);\n    root.style.setProperty('--tw-color-secondary', colors.secondary);\n    root.style.setProperty('--tw-color-accent', colors.accent);\n    root.style.setProperty('--tw-color-surface', colors.surface);\n    root.style.setProperty('--tw-color-background', colors.background);\n    console.log('✅ Theme applied successfully');\n  };\n  const refreshCustomization = () => {\n    loadCustomization();\n  };\n  const getSystemName = () => {\n    return (customization === null || customization === void 0 ? void 0 : customization.systemName) || 'Library System';\n  };\n  const getLogo = () => {\n    if (customization !== null && customization !== void 0 && customization.showLogo && customization !== null && customization !== void 0 && customization.logoUrl) {\n      return {\n        url: customization.logoUrl,\n        name: customization.logoName || 'Logo'\n      };\n    }\n    return null;\n  };\n  const getThemeColors = () => {\n    var _customization$active;\n    return (customization === null || customization === void 0 ? void 0 : (_customization$active = customization.activeTheme) === null || _customization$active === void 0 ? void 0 : _customization$active.colors) || defaultTheme.colors;\n  };\n  const isThemeLoaded = () => {\n    return !loading && customization !== null;\n  };\n  useEffect(() => {\n    loadCustomization();\n  }, []);\n  const value = {\n    customization,\n    loading,\n    error,\n    refreshCustomization,\n    getSystemName,\n    getLogo,\n    getThemeColors,\n    isThemeLoaded\n  };\n  return /*#__PURE__*/_jsxDEV(CustomizationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(CustomizationProvider, \"20+60cjAhZuROuRgVpzej9e8+uM=\");\n_c = CustomizationProvider;\nvar _c;\n$RefreshReg$(_c, \"CustomizationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","customizationAPI","jsxDEV","_jsxDEV","CustomizationContext","useCustomization","_s","context","Error","CustomizationProvider","children","_s2","customization","setCustomization","loading","setLoading","error","setError","defaultTheme","colors","primary","secondary","accent","background","surface","text","textSecondary","border","success","warning","info","loadCustomization","_data$activeTheme","console","log","data","get","activeTheme","name","applyTheme","err","_err$response","response","status","message","systemName","showLogo","logoUrl","root","document","documentElement","Object","entries","forEach","key","value","cssVarName","replace","toLowerCase","style","setProperty","refreshCustomization","getSystemName","getLogo","url","logoName","getThemeColors","_customization$active","isThemeLoaded","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vibhav/Desktop/library/library-frontend/src/contexts/CustomizationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { customizationAPI } from '../services/api';\r\n\r\nconst CustomizationContext = createContext();\r\n\r\nexport const useCustomization = () => {\r\n  const context = useContext(CustomizationContext);\r\n  if (!context) {\r\n    throw new Error('useCustomization must be used within a CustomizationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CustomizationProvider = ({ children }) => {\r\n  const [customization, setCustomization] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Default theme colors (fallback)\r\n  const defaultTheme = {\r\n    colors: {\r\n      primary: '#3B82F6',\r\n      secondary: '#1E40AF',\r\n      accent: '#F59E0B',\r\n      background: '#F9FAFB',\r\n      surface: '#FFFFFF',\r\n      text: '#111827',\r\n      textSecondary: '#6B7280',\r\n      border: '#E5E7EB',\r\n      success: '#10B981',\r\n      warning: '#F59E0B',\r\n      error: '#EF4444',\r\n      info: '#3B82F6'\r\n    }\r\n  };\r\n\r\n  const loadCustomization = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('🔄 Loading customization settings...');\r\n      const data = await customizationAPI.get();\r\n      console.log('📥 Received customization data:', data);\r\n      setCustomization(data);\r\n      setError(null);\r\n      \r\n      // Apply theme to CSS variables\r\n      if (data.activeTheme?.colors) {\r\n        console.log('🎨 Applying active theme:', data.activeTheme.name);\r\n        applyTheme(data.activeTheme.colors);\r\n      } else {\r\n        console.log('🎨 No active theme found, applying default theme');\r\n        applyTheme(defaultTheme.colors);\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Error loading customization:', err);\r\n      \r\n      // If it's a 404 error (no customization exists), that's normal for first time\r\n      if (err.response?.status === 404) {\r\n        console.log('ℹ️ No customization found, using defaults');\r\n      } else {\r\n        setError(err.message);\r\n      }\r\n      \r\n      // Always apply default theme and settings when API fails\r\n      console.log('🎨 Applying default theme due to error');\r\n      applyTheme(defaultTheme.colors);\r\n      \r\n      // Set default customization\r\n      setCustomization({\r\n        systemName: 'Library System',\r\n        showLogo: false,\r\n        logoUrl: null,\r\n        activeTheme: defaultTheme\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n      console.log('✅ Customization loading completed');\r\n    }\r\n  };\r\n\r\n  const applyTheme = (colors) => {\r\n    console.log('🎨 Applying theme colors:', colors);\r\n    const root = document.documentElement;\r\n    \r\n    // Apply CSS custom properties\r\n    Object.entries(colors).forEach(([key, value]) => {\r\n      const cssVarName = `--color-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;\r\n      root.style.setProperty(cssVarName, value);\r\n      console.log(`Set ${cssVarName} = ${value}`);\r\n    });\r\n    \r\n    // Apply Tailwind-compatible classes through CSS variables\r\n    root.style.setProperty('--tw-color-primary', colors.primary);\r\n    root.style.setProperty('--tw-color-secondary', colors.secondary);\r\n    root.style.setProperty('--tw-color-accent', colors.accent);\r\n    root.style.setProperty('--tw-color-surface', colors.surface);\r\n    root.style.setProperty('--tw-color-background', colors.background);\r\n    \r\n    console.log('✅ Theme applied successfully');\r\n  };\r\n\r\n  const refreshCustomization = () => {\r\n    loadCustomization();\r\n  };\r\n\r\n  const getSystemName = () => {\r\n    return customization?.systemName || 'Library System';\r\n  };\r\n\r\n  const getLogo = () => {\r\n    if (customization?.showLogo && customization?.logoUrl) {\r\n      return {\r\n        url: customization.logoUrl,\r\n        name: customization.logoName || 'Logo'\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getThemeColors = () => {\r\n    return customization?.activeTheme?.colors || defaultTheme.colors;\r\n  };\r\n\r\n  const isThemeLoaded = () => {\r\n    return !loading && customization !== null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomization();\r\n  }, []);\r\n\r\n  const value = {\r\n    customization,\r\n    loading,\r\n    error,\r\n    refreshCustomization,\r\n    getSystemName,\r\n    getLogo,\r\n    getThemeColors,\r\n    isThemeLoaded\r\n  };\r\n\r\n  return (\r\n    <CustomizationContext.Provider value={value}>\r\n      {children}\r\n    </CustomizationContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}